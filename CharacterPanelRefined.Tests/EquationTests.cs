using System;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.JavaScript;
using System.Runtime.Serialization;
using Dalamud.Data;
using FFXIVClientStructs.FFXIV.Client.Game;
using FFXIVClientStructs.FFXIV.Client.Game.Event;
using FFXIVClientStructs.FFXIV.Client.Game.UI;
using FFXIVClientStructs.Interop;
using Lumina;
using Lumina.Data;
using Lumina.Excel;
using Lumina.Excel.GeneratedSheets;
using Moq;
using NUnit.Framework;

namespace CharacterPanelRefined.Tests;

public class EquationTests {
    #region Breakpoints

    private List<(int Speed, double GcdScalar)> gcd25Breakpoints = new() {
        (400, 2.5),
        (415, 2.49),
        (474, 2.48),
        (532, 2.47),
        (590, 2.46),
        (649, 2.45),
        (707, 2.44),
        (766, 2.43),
        (824, 2.42),
        (883, 2.41),
        (941, 2.4),
        (1000, 2.39),
        (1058, 2.38),
        (1117, 2.37),
        (1175, 2.36),
        (1234, 2.35),
        (1292, 2.34),
        (1350, 2.33),
        (1409, 2.32),
        (1467, 2.31),
        (1526, 2.3),
        (1584, 2.29),
        (1643, 2.28),
        (1701, 2.27),
        (1760, 2.26),
        (1818, 2.25),
        (1877, 2.24),
        (1935, 2.23),
        (1994, 2.22),
        (2052, 2.21),
        (2110, 2.2),
        (2169, 2.19),
        (2227, 2.18),
        (2286, 2.17),
        (2344, 2.16),
        (2403, 2.15),
        (2461, 2.14),
        (2520, 2.13),
        (2578, 2.12),
        (2637, 2.11),
        (2695, 2.1),
    };

    private List<(int Speed, double GcdScalar)> gcd28Breakpoints = new() {
        (400, 2.8),
        (415, 2.79),
        (459, 2.78),
        (517, 2.77),
        (561, 2.76),
        (620, 2.75),
        (664, 2.74),
        (722, 2.73),
        (780, 2.72),
        (824, 2.71),
        (883, 2.7),
        (927, 2.69),
        (985, 2.68),
        (1029, 2.67),
        (1087, 2.66),
        (1146, 2.65),
        (1190, 2.64),
        (1248, 2.63),
        (1292, 2.62),
        (1350, 2.61),
        (1394, 2.6),
        (1453, 2.59),
        (1511, 2.58),
        (1555, 2.57),
        (1614, 2.56),
        (1657, 2.55),
        (1716, 2.54),
        (1760, 2.53),
        (1818, 2.52),
        (1877, 2.51),
        (1920, 2.5),
        (1979, 2.49),
        (2023, 2.48),
        (2081, 2.47),
        (2125, 2.46),
        (2184, 2.45),
        (2242, 2.44),
        (2286, 2.43),
        (2344, 2.42),
        (2388, 2.41),
        (2447, 2.4),
        (2490, 2.39),
        (2549, 2.38),
        (2607, 2.37),
        (2651, 2.36),
    };

    private List<(int Speed, double GcdScalar)> llGcd25Breakpoints = new() {
        (400, 2.12),
        (444, 2.11),
        (503, 2.1),
        (576, 2.09),
        (649, 2.08),
        (707, 2.07),
        (780, 2.06),
        (854, 2.05),
        (927, 2.04),
        (1000, 2.03),
        (1058, 2.02),
        (1131, 2.01),
        (1204, 2),
        (1263, 1.99),
        (1336, 1.98),
        (1409, 1.97),
        (1467, 1.96),
        (1540, 1.95),
        (1614, 1.94),
        (1672, 1.93),
        (1745, 1.92),
        (1818, 1.91),
        (1877, 1.9),
        (1950, 1.89),
        (2023, 1.88),
        (2096, 1.87),
        (2169, 1.86),
        (2227, 1.85),
        (2300, 1.84),
        (2374, 1.83),
        (2432, 1.82),
        (2505, 1.81),
        (2578, 1.8),
        (2637, 1.79),
        (2710, 1.78)
    };

    private List<(int Speed, double GcdScalar)> llGcd28Breakpoints = new() {
        (400, 2.38),
        (415, 2.37),
        (459, 2.36),
        (532, 2.35),
        (590, 2.34),
        (649, 2.33),
        (707, 2.32),
        (780, 2.31),
        (839, 2.3),
        (897, 2.29),
        (956, 2.28),
        (1014, 2.27),
        (1087, 2.26),
        (1146, 2.25),
        (1204, 2.24),
        (1263, 2.23),
        (1321, 2.22),
        (1394, 2.21),
        (1453, 2.2),
        (1511, 2.19),
        (1570, 2.18),
        (1628, 2.17),
        (1701, 2.16),
        (1760, 2.15),
        (1818, 2.14),
        (1877, 2.13),
        (1950, 2.12),
        (1994, 2.11),
        (2067, 2.1),
        (2125, 2.09),
        (2184, 2.08),
        (2242, 2.07),
        (2315, 2.06),
        (2374, 2.05),
        (2432, 2.04),
        (2490, 2.03),
        (2549, 2.02),
        (2622, 2.01),
        (2680, 2)
    };

    private Dictionary<string, List<(int Stat, double Value)>> breakpoints = new() {
        {
            nameof(Equations.CalcDh), new() {
                (400, 0.000),
                (404, 0.001),
                (407, 0.002),
                (411, 0.003),
                (414, 0.004),
                (418, 0.005),
                (421, 0.006),
                (425, 0.007),
                (428, 0.008),
                (432, 0.009),
                (435, 0.010),
                (438, 0.011),
                (442, 0.012),
                (445, 0.013),
                (449, 0.014),
                (452, 0.015),
                (456, 0.016),
                (459, 0.017),
                (463, 0.018),
                (466, 0.019),
                (470, 0.020),
                (473, 0.021),
                (476, 0.022),
                (480, 0.023),
                (483, 0.024),
                (487, 0.025),
                (490, 0.026),
                (494, 0.027),
                (497, 0.028),
                (501, 0.029),
                (504, 0.030),
                (508, 0.031),
                (511, 0.032),
                (514, 0.033),
                (518, 0.034),
                (521, 0.035),
                (525, 0.036),
                (528, 0.037),
                (532, 0.038),
                (535, 0.039),
                (539, 0.040),
                (542, 0.041),
                (546, 0.042),
                (549, 0.043),
                (552, 0.044),
                (556, 0.045),
                (559, 0.046),
                (563, 0.047),
                (566, 0.048),
                (570, 0.049),
                (573, 0.050),
                (577, 0.051),
                (580, 0.052),
                (584, 0.053),
                (587, 0.054),
                (590, 0.055),
                (594, 0.056),
                (597, 0.057),
                (601, 0.058),
                (604, 0.059),
                (608, 0.060),
                (611, 0.061),
                (615, 0.062),
                (618, 0.063),
                (622, 0.064),
                (625, 0.065),
                (628, 0.066),
                (632, 0.067),
                (635, 0.068),
                (639, 0.069),
                (642, 0.070),
                (646, 0.071),
                (649, 0.072),
                (653, 0.073),
                (656, 0.074),
                (660, 0.075),
                (663, 0.076),
                (666, 0.077),
                (670, 0.078),
                (673, 0.079),
                (677, 0.080),
                (680, 0.081),
                (684, 0.082),
                (687, 0.083),
                (691, 0.084),
                (694, 0.085),
                (698, 0.086),
                (701, 0.087),
                (704, 0.088),
                (708, 0.089),
                (711, 0.090),
                (715, 0.091),
                (718, 0.092),
                (722, 0.093),
                (725, 0.094),
                (729, 0.095),
                (732, 0.096),
                (736, 0.097),
                (739, 0.098),
                (742, 0.099),
                (746, 0.10),
                (749, 0.101),
                (753, 0.102),
                (756, 0.103),
                (760, 0.104),
                (763, 0.105),
                (767, 0.106),
                (770, 0.107),
                (774, 0.108),
                (777, 0.109),
                (780, 0.110),
                (784, 0.111),
                (787, 0.112),
                (791, 0.113),
                (794, 0.114),
                (798, 0.115),
                (801, 0.116),
                (805, 0.117),
                (808, 0.118),
                (812, 0.119),
                (815, 0.120),
                (818, 0.121),
                (822, 0.122),
                (825, 0.123),
                (829, 0.124),
                (832, 0.125),
                (836, 0.126),
                (839, 0.127),
                (843, 0.128),
                (846, 0.129),
                (850, 0.130),
                (853, 0.131),
                (856, 0.132),
                (860, 0.133),
                (863, 0.134),
                (867, 0.135),
                (870, 0.136),
                (874, 0.137),
                (877, 0.138),
                (881, 0.139),
                (884, 0.140),
                (888, 0.141),
                (891, 0.142),
                (894, 0.143),
                (898, 0.144),
                (901, 0.145),
                (905, 0.146),
                (908, 0.147),
                (912, 0.148),
                (915, 0.149),
                (919, 0.150),
                (922, 0.151),
                (926, 0.152),
                (929, 0.153),
                (932, 0.154),
                (936, 0.155),
                (939, 0.156),
                (943, 0.157),
                (946, 0.158),
                (950, 0.159),
                (953, 0.160),
                (957, 0.161),
                (960, 0.162),
                (964, 0.163),
                (967, 0.164),
                (970, 0.165),
                (974, 0.166),
                (977, 0.167),
                (981, 0.168),
                (984, 0.169),
                (988, 0.170),
                (991, 0.171),
                (995, 0.172),
                (998, 0.173),
                (1002, 0.174),
                (1005, 0.175),
                (1008, 0.176),
                (1012, 0.177),
                (1015, 0.178),
                (1019, 0.179),
                (1022, 0.180),
                (1026, 0.181),
                (1029, 0.182),
                (1033, 0.183),
                (1036, 0.184),
                (1040, 0.185),
                (1043, 0.186),
                (1046, 0.187),
                (1050, 0.188),
                (1053, 0.189),
                (1057, 0.190),
                (1060, 0.191),
                (1064, 0.192),
                (1067, 0.193),
                (1071, 0.194),
                (1074, 0.195),
                (1078, 0.196),
                (1081, 0.197),
                (1084, 0.198),
                (1088, 0.199),
                (1091, 0.200),
                (1095, 0.201),
                (1098, 0.202),
                (1102, 0.203),
                (1105, 0.204),
                (1109, 0.205),
                (1112, 0.206),
                (1116, 0.207),
                (1119, 0.208),
                (1122, 0.209),
                (1126, 0.210),
                (1129, 0.211),
                (1133, 0.212),
                (1136, 0.213),
                (1140, 0.214),
                (1143, 0.215),
                (1147, 0.216),
                (1150, 0.217),
                (1154, 0.218),
                (1157, 0.219),
                (1160, 0.220),
                (1164, 0.221),
                (1167, 0.222),
                (1171, 0.223),
                (1174, 0.224),
                (1178, 0.225),
                (1181, 0.226),
                (1185, 0.227),
                (1188, 0.228),
                (1192, 0.229),
                (1195, 0.230),
                (1198, 0.231),
                (1202, 0.232),
                (1205, 0.233),
                (1209, 0.234),
                (1212, 0.235),
                (1216, 0.236),
                (1219, 0.237),
                (1223, 0.238),
                (1226, 0.239),
                (1230, 0.240),
                (1233, 0.241),
                (1236, 0.242),
                (1240, 0.243),
                (1243, 0.244),
                (1247, 0.245),
                (1250, 0.246),
                (1254, 0.247),
                (1257, 0.248),
                (1261, 0.249),
                (1264, 0.250),
                (1268, 0.251),
                (1271, 0.252),
                (1274, 0.253),
                (1278, 0.254),
                (1281, 0.255),
                (1285, 0.256),
                (1288, 0.257),
                (1292, 0.258),
                (1295, 0.259),
                (1299, 0.260),
                (1302, 0.261),
                (1306, 0.262),
                (1309, 0.263),
                (1312, 0.264),
                (1316, 0.265),
                (1319, 0.266),
                (1323, 0.267),
                (1326, 0.268),
                (1330, 0.269),
                (1333, 0.270),
                (1337, 0.271),
                (1340, 0.272),
                (1344, 0.273),
                (1347, 0.274),
                (1350, 0.275),
                (1354, 0.276),
                (1357, 0.277),
                (1361, 0.278),
                (1364, 0.279),
                (1368, 0.280),
                (1371, 0.281),
                (1375, 0.282),
                (1378, 0.283),
                (1382, 0.284),
                (1385, 0.285),
                (1388, 0.286),
                (1392, 0.287),
                (1395, 0.288),
                (1399, 0.289),
                (1402, 0.290),
                (1406, 0.291),
                (1409, 0.292),
                (1413, 0.293),
                (1416, 0.294),
                (1420, 0.295),
                (1423, 0.296),
                (1426, 0.297),
                (1430, 0.298),
                (1433, 0.299),
                (1437, 0.300),
                (1440, 0.301),
                (1444, 0.302),
                (1447, 0.303),
                (1451, 0.304),
                (1454, 0.305),
                (1458, 0.306),
                (1461, 0.307),
                (1464, 0.308),
                (1468, 0.309),
                (1471, 0.310),
                (1475, 0.311),
                (1478, 0.312),
                (1482, 0.313),
                (1485, 0.314),
                (1489, 0.315),
                (1492, 0.316),
                (1496, 0.317),
                (1499, 0.318),
                (1502, 0.319),
                (1506, 0.320),
                (1509, 0.321),
                (1513, 0.322),
                (1516, 0.323),
                (1520, 0.324),
                (1523, 0.325),
                (1527, 0.326),
                (1530, 0.327),
                (1534, 0.328),
                (1537, 0.329),
                (1540, 0.330),
                (1544, 0.331),
                (1547, 0.332),
                (1551, 0.333),
                (1554, 0.334),
                (1558, 0.335),
                (1561, 0.336),
                (1565, 0.337),
                (1568, 0.338),
                (1572, 0.339),
                (1575, 0.340),
                (1578, 0.341),
                (1582, 0.342),
                (1585, 0.343),
                (1589, 0.344),
                (1592, 0.345),
                (1596, 0.346),
                (1599, 0.347),
                (1603, 0.348),
                (1606, 0.349),
                (1610, 0.350),
                (1613, 0.351),
                (1616, 0.352),
                (1620, 0.353),
                (1623, 0.354),
                (1627, 0.355),
                (1630, 0.356),
                (1634, 0.357),
                (1637, 0.358),
                (1641, 0.359),
                (1644, 0.360),
                (1648, 0.361),
                (1651, 0.362),
                (1654, 0.363),
                (1658, 0.364),
                (1661, 0.365),
                (1665, 0.366),
                (1668, 0.367),
                (1672, 0.368),
                (1675, 0.369),
                (1679, 0.370),
                (1682, 0.371),
                (1686, 0.372),
                (1689, 0.373),
                (1692, 0.374),
                (1696, 0.375),
                (1699, 0.376),
                (1703, 0.377),
                (1706, 0.378),
                (1710, 0.379),
                (1713, 0.380),
                (1717, 0.381),
                (1720, 0.382),
                (1724, 0.383),
                (1727, 0.384),
                (1730, 0.385),
                (1734, 0.386),
                (1737, 0.387),
                (1741, 0.388),
                (1744, 0.389),
                (1748, 0.390),
                (1751, 0.391),
                (1755, 0.392),
                (1758, 0.393),
                (1762, 0.394),
                (1765, 0.395),
                (1768, 0.396),
                (1772, 0.397),
                (1775, 0.398),
                (1779, 0.399),
            }
        }, {
            nameof(Equations.CalcDet), new() {
                (390, 0),
                (404, 0.001),
                (418, 0.002),
                (431, 0.003),
                (445, 0.004),
                (458, 0.005),
                (472, 0.006),
                (485, 0.007),
                (499, 0.008),
                (513, 0.009),
                (526, 0.01),
                (540, 0.011),
                (553, 0.012),
                (567, 0.013),
                (580, 0.014),
                (594, 0.015),
                (608, 0.016),
                (621, 0.017),
                (635, 0.018),
                (648, 0.019),
                (662, 0.02),
                (675, 0.021),
                (689, 0.022),
                (703, 0.023),
                (716, 0.024),
                (730, 0.025),
                (743, 0.026),
                (757, 0.027),
                (770, 0.028),
                (784, 0.029),
                (798, 0.03),
                (811, 0.031),
                (825, 0.032),
                (838, 0.033),
                (852, 0.034),
                (865, 0.035),
                (879, 0.036),
                (893, 0.037),
                (906, 0.038),
                (920, 0.039),
                (933, 0.04),
                (947, 0.041),
                (960, 0.042),
                (974, 0.043),
                (988, 0.044),
                (1001, 0.045),
                (1015, 0.046),
                (1028, 0.047),
                (1042, 0.048),
                (1055, 0.049),
                (1069, 0.05),
                (1083, 0.051),
                (1096, 0.052),
                (1110, 0.053),
                (1123, 0.054),
                (1137, 0.055),
                (1150, 0.056),
                (1164, 0.057),
                (1178, 0.058),
                (1191, 0.059),
                (1205, 0.06),
                (1218, 0.061),
                (1232, 0.062),
                (1245, 0.063),
                (1259, 0.064),
                (1273, 0.065),
                (1286, 0.066),
                (1300, 0.067),
                (1313, 0.068),
                (1327, 0.069),
                (1340, 0.07),
                (1354, 0.071),
                (1368, 0.072),
                (1381, 0.073),
                (1395, 0.074),
                (1408, 0.075),
                (1422, 0.076),
                (1435, 0.077),
                (1449, 0.078),
                (1463, 0.079),
                (1476, 0.08),
                (1490, 0.081),
                (1503, 0.082),
                (1517, 0.083),
                (1530, 0.084),
                (1544, 0.085),
                (1558, 0.086),
                (1571, 0.087),
                (1585, 0.088),
                (1598, 0.089),
                (1612, 0.09),
                (1625, 0.091),
                (1639, 0.092),
                (1653, 0.093),
                (1666, 0.094),
                (1680, 0.095),
                (1693, 0.096),
                (1707, 0.097),
                (1720, 0.098),
                (1734, 0.099),
                (1748, 0.1),
                (1761, 0.101),
                (1775, 0.102),
                (1788, 0.103),
                (1802, 0.104),
                (1815, 0.105),
                (1829, 0.106),
                (1843, 0.107),
                (1856, 0.108),
                (1870, 0.109),
                (1883, 0.11),
                (1897, 0.111),
                (1910, 0.112),
                (1924, 0.113),
                (1938, 0.114),
                (1951, 0.115),
                (1965, 0.116),
                (1978, 0.117),
                (1992, 0.118),
                (2005, 0.119),
                (2019, 0.12),
                (2033, 0.121),
                (2046, 0.122),
                (2060, 0.123),
                (2073, 0.124),
                (2087, 0.125),
                (2100, 0.126),
                (2114, 0.127),
                (2128, 0.128),
                (2141, 0.129),
                (2155, 0.13),
                (2168, 0.131),
                (2182, 0.132),
                (2195, 0.133),
                (2209, 0.134),
                (2223, 0.135),
                (2236, 0.136),
                (2250, 0.137),
                (2263, 0.138),
                (2277, 0.139),
                (2290, 0.14),
                (2304, 0.141),
                (2318, 0.142),
                (2331, 0.143),
                (2345, 0.144),
                (2358, 0.145),
                (2372, 0.146),
                (2385, 0.147),
                (2399, 0.148),
                (2413, 0.149),
                (2426, 0.15),
                (2440, 0.151),
                (2453, 0.152),
                (2467, 0.153),
                (2480, 0.154),
                (2494, 0.155),
                (2508, 0.156),
                (2521, 0.157),
                (2535, 0.158),
                (2548, 0.159),
                (2562, 0.16),
                (2575, 0.161),
                (2589, 0.162),
                (2603, 0.163),
                (2616, 0.164),
                (2630, 0.165),
                (2643, 0.166),
                (2657, 0.167),
                (2670, 0.168),
                (2684, 0.169),
            }
        }, {
            nameof(Equations.CalcCritRate), new() {
                (400, 0.050),
                (410, 0.051),
                (419, 0.052),
                (429, 0.053),
                (438, 0.054),
                (448, 0.055),
                (457, 0.056),
                (467, 0.057),
                (476, 0.058),
                (486, 0.059),
                (495, 0.060),
                (505, 0.061),
                (514, 0.062),
                (524, 0.063),
                (533, 0.064),
                (543, 0.065),
                (552, 0.066),
                (562, 0.067),
                (571, 0.068),
                (581, 0.069),
                (590, 0.070),
                (600, 0.071),
                (609, 0.072),
                (619, 0.073),
                (628, 0.074),
                (638, 0.075),
                (647, 0.076),
                (657, 0.077),
                (666, 0.078),
                (676, 0.079),
                (685, 0.080),
                (695, 0.081),
                (704, 0.082),
                (714, 0.083),
                (723, 0.084),
                (733, 0.085),
                (742, 0.086),
                (752, 0.087),
                (761, 0.088),
                (771, 0.089),
                (780, 0.090),
                (790, 0.091),
                (799, 0.092),
                (809, 0.093),
                (818, 0.094),
                (828, 0.095),
                (837, 0.096),
                (847, 0.097),
                (856, 0.098),
                (866, 0.099),
                (875, 0.100),
                (885, 0.101),
                (894, 0.102),
                (904, 0.103),
                (913, 0.104),
                (923, 0.105),
                (932, 0.106),
                (942, 0.107),
                (951, 0.108),
                (961, 0.109),
                (970, 0.110),
                (980, 0.111),
                (989, 0.112),
                (999, 0.113),
                (1008, 0.114),
                (1018, 0.115),
                (1027, 0.116),
                (1037, 0.117),
                (1046, 0.118),
                (1056, 0.119),
                (1065, 0.120),
                (1075, 0.121),
                (1084, 0.122),
                (1094, 0.123),
                (1103, 0.124),
                (1113, 0.125),
                (1122, 0.126),
                (1132, 0.127),
                (1141, 0.128),
                (1151, 0.129),
                (1160, 0.130),
                (1170, 0.131),
                (1179, 0.132),
                (1189, 0.133),
                (1198, 0.134),
                (1208, 0.135),
                (1217, 0.136),
                (1227, 0.137),
                (1236, 0.138),
                (1246, 0.139),
                (1255, 0.140),
                (1265, 0.141),
                (1274, 0.142),
                (1284, 0.143),
                (1293, 0.144),
                (1303, 0.145),
                (1312, 0.146),
                (1322, 0.147),
                (1331, 0.148),
                (1341, 0.149),
                (1350, 0.150),
                (1360, 0.151),
                (1369, 0.152),
                (1379, 0.153),
                (1388, 0.154),
                (1398, 0.155),
                (1407, 0.156),
                (1417, 0.157),
                (1426, 0.158),
                (1436, 0.159),
                (1445, 0.160),
                (1455, 0.161),
                (1464, 0.162),
                (1474, 0.163),
                (1483, 0.164),
                (1493, 0.165),
                (1502, 0.166),
                (1512, 0.167),
                (1521, 0.168),
                (1531, 0.169),
                (1540, 0.170),
                (1550, 0.171),
                (1559, 0.172),
                (1569, 0.173),
                (1578, 0.174),
                (1588, 0.175),
                (1597, 0.176),
                (1607, 0.177),
                (1616, 0.178),
                (1626, 0.179),
                (1635, 0.180),
                (1645, 0.181),
                (1654, 0.182),
                (1664, 0.183),
                (1673, 0.184),
                (1683, 0.185),
                (1692, 0.186),
                (1702, 0.187),
                (1711, 0.188),
                (1721, 0.189),
                (1730, 0.190),
                (1740, 0.191),
                (1749, 0.192),
                (1759, 0.193),
                (1768, 0.194),
                (1778, 0.195),
                (1787, 0.196),
                (1797, 0.197),
                (1806, 0.198),
                (1816, 0.199),
                (1825, 0.200),
                (1835, 0.201),
                (1844, 0.202),
                (1854, 0.203),
                (1863, 0.204),
                (1873, 0.205),
                (1882, 0.206),
                (1892, 0.207),
                (1901, 0.208),
                (1911, 0.209),
                (1920, 0.210),
                (1930, 0.211),
                (1939, 0.212),
                (1949, 0.213),
                (1958, 0.214),
                (1968, 0.215),
                (1977, 0.216),
                (1987, 0.217),
                (1996, 0.218),
                (2006, 0.219),
                (2015, 0.220),
                (2025, 0.221),
                (2034, 0.222),
                (2044, 0.223),
                (2053, 0.224),
                (2063, 0.225),
                (2072, 0.226),
                (2082, 0.227),
                (2091, 0.228),
                (2101, 0.229),
                (2110, 0.230),
                (2120, 0.231),
                (2129, 0.232),
                (2139, 0.233),
                (2148, 0.234),
                (2158, 0.235),
                (2167, 0.236),
                (2177, 0.237),
                (2186, 0.238),
                (2196, 0.239),
                (2205, 0.240),
                (2215, 0.241),
                (2224, 0.242),
                (2234, 0.243),
                (2243, 0.244),
                (2253, 0.245),
                (2262, 0.246),
                (2272, 0.247),
                (2281, 0.248),
                (2291, 0.249),
            }
        }, {
            nameof(Equations.CalcCritDmg), new() {
                (400, 1.400),
                (410, 1.401),
                (419, 1.402),
                (429, 1.403),
                (438, 1.404),
                (448, 1.405),
                (457, 1.406),
                (467, 1.407),
                (476, 1.408),
                (486, 1.409),
                (495, 1.410),
                (505, 1.411),
                (514, 1.412),
                (524, 1.413),
                (533, 1.414),
                (543, 1.415),
                (552, 1.416),
                (562, 1.417),
                (571, 1.418),
                (581, 1.419),
                (590, 1.420),
                (600, 1.421),
                (609, 1.422),
                (619, 1.423),
                (628, 1.424),
                (638, 1.425),
                (647, 1.426),
                (657, 1.427),
                (666, 1.428),
                (676, 1.429),
                (685, 1.430),
                (695, 1.431),
                (704, 1.432),
                (714, 1.433),
                (723, 1.434),
                (733, 1.435),
                (742, 1.436),
                (752, 1.437),
                (761, 1.438),
                (771, 1.439),
                (780, 1.440),
                (790, 1.441),
                (799, 1.442),
                (809, 1.443),
                (818, 1.444),
                (828, 1.445),
                (837, 1.446),
                (847, 1.447),
                (856, 1.448),
                (866, 1.449),
                (875, 1.450),
                (885, 1.451),
                (894, 1.452),
                (904, 1.453),
                (913, 1.454),
                (923, 1.455),
                (932, 1.456),
                (942, 1.457),
                (951, 1.458),
                (961, 1.459),
                (970, 1.460),
                (980, 1.461),
                (989, 1.462),
                (999, 1.463),
                (1008, 1.464),
                (1018, 1.465),
                (1027, 1.466),
                (1037, 1.467),
                (1046, 1.468),
                (1056, 1.469),
                (1065, 1.470),
                (1075, 1.471),
                (1084, 1.472),
                (1094, 1.473),
                (1103, 1.474),
                (1113, 1.475),
                (1122, 1.476),
                (1132, 1.477),
                (1141, 1.478),
                (1151, 1.479),
                (1160, 1.480),
                (1170, 1.481),
                (1179, 1.482),
                (1189, 1.483),
                (1198, 1.484),
                (1208, 1.485),
                (1217, 1.486),
                (1227, 1.487),
                (1236, 1.488),
                (1246, 1.489),
                (1255, 1.490),
                (1265, 1.491),
                (1274, 1.492),
                (1284, 1.493),
                (1293, 1.494),
                (1303, 1.495),
                (1312, 1.496),
                (1322, 1.497),
                (1331, 1.498),
                (1341, 1.499),
                (1350, 1.500),
                (1360, 1.501),
                (1369, 1.502),
                (1379, 1.503),
                (1388, 1.504),
                (1398, 1.505),
                (1407, 1.506),
                (1417, 1.507),
                (1426, 1.508),
                (1436, 1.509),
                (1445, 1.510),
                (1455, 1.511),
                (1464, 1.512),
                (1474, 1.513),
                (1483, 1.514),
                (1493, 1.515),
                (1502, 1.516),
                (1512, 1.517),
                (1521, 1.518),
                (1531, 1.519),
                (1540, 1.520),
                (1550, 1.521),
                (1559, 1.522),
                (1569, 1.523),
                (1578, 1.524),
                (1588, 1.525),
                (1597, 1.526),
                (1607, 1.527),
                (1616, 1.528),
                (1626, 1.529),
                (1635, 1.530),
                (1645, 1.531),
                (1654, 1.532),
                (1664, 1.533),
                (1673, 1.534),
                (1683, 1.535),
                (1692, 1.536),
                (1702, 1.537),
                (1711, 1.538),
                (1721, 1.539),
                (1730, 1.540),
                (1740, 1.541),
                (1749, 1.542),
                (1759, 1.543),
                (1768, 1.544),
                (1778, 1.545),
                (1787, 1.546),
                (1797, 1.547),
                (1806, 1.548),
                (1816, 1.549),
                (1825, 1.550),
                (1835, 1.551),
                (1844, 1.552),
                (1854, 1.553),
                (1863, 1.554),
                (1873, 1.555),
                (1882, 1.556),
                (1892, 1.557),
                (1901, 1.558),
                (1911, 1.559),
                (1920, 1.560),
                (1930, 1.561),
                (1939, 1.562),
                (1949, 1.563),
                (1958, 1.564),
                (1968, 1.565),
                (1977, 1.566),
                (1987, 1.567),
                (1996, 1.568),
                (2006, 1.569),
                (2015, 1.570),
                (2025, 1.571),
                (2034, 1.572),
                (2044, 1.573),
                (2053, 1.574),
                (2063, 1.575),
                (2072, 1.576),
                (2082, 1.577),
                (2091, 1.578),
                (2101, 1.579),
                (2110, 1.580),
                (2120, 1.581),
                (2129, 1.582),
                (2139, 1.583),
                (2148, 1.584),
                (2158, 1.585),
                (2167, 1.586),
                (2177, 1.587),
                (2186, 1.588),
                (2196, 1.589),
                (2205, 1.590),
                (2215, 1.591),
                (2224, 1.592),
                (2234, 1.593),
                (2243, 1.594),
                (2253, 1.595),
                (2262, 1.596),
                (2272, 1.597),
                (2281, 1.598),
                (2291, 1.599),
            }
        }
    };

    #endregion

    [Test]
    public void TestBreakpoints() {
        foreach (var (name, brkpnts) in breakpoints) {
            var equation = typeof(Equations).GetMethod(name)!;

            var n = 0;
            var lbp = brkpnts[0];
            var nbp = brkpnts[1];
            var statInfo = new StatInfo();
            var lvlModifier = LevelModifiers.LevelTable[90];
            for (var stat = lbp.Stat; stat < brkpnts.Last().Stat; stat++) {
                if (stat >= nbp.Stat) {
                    lbp = nbp;
                    nbp = brkpnts[++n + 1];
                }

                var args = new object[] { stat, statInfo, lvlModifier };
                equation.Invoke(null, args);
                statInfo = (StatInfo)args[1];

                Assert.AreEqual(lbp.Value, statInfo.DisplayValue, "{0}: Value is off for {1}", name, stat);
                Assert.AreEqual(lbp.Stat, statInfo.PrevTier, "{0}: PrevTier is off for {1}", name, stat);
                Assert.AreEqual(nbp.Stat, statInfo.NextTier, "{0}: NextTier is off for {1}", name, stat);
            }
        }
    }


    [Test]
    public void TestGcdBreakpoints() {
        var n = 0;
        var lbp = gcd25Breakpoints[0];
        var nbp = gcd25Breakpoints[1];
        var j = 0;
        var lbp28 = gcd28Breakpoints[0];
        var nbp28 = gcd28Breakpoints[1];
        var l = 0;
        var lbpm = llGcd25Breakpoints[0];
        var nbpm = llGcd25Breakpoints[1];
        var k = 0;
        var lbpm28 = llGcd28Breakpoints[0];
        var nbpm28 = llGcd28Breakpoints[1];
        var statInfo = new StatInfo();
        var gcd25 = new StatInfo();
        var gcd28 = new StatInfo();
        var lvlModifier = LevelModifiers.LevelTable[90];
        var altGcd = new AlternateGcd(280, "Fire IV");
        var gcdMod = GcdModifier.LeyLines;
        for (var speed = 400; speed < 2651; speed++) {
            if (speed >= nbp.Speed) {
                lbp = nbp;
                nbp = gcd25Breakpoints[++n + 1];
            }

            if (speed >= nbp28.Speed) {
                lbp28 = nbp28;
                nbp28 = gcd28Breakpoints[++j + 1];
            }

            if (speed >= nbpm.Speed) {
                lbpm = nbpm;
                nbpm = llGcd25Breakpoints[++l + 1];
            }

            if (speed >= nbpm28.Speed) {
                lbpm28 = nbpm28;
                nbpm28 = llGcd28Breakpoints[++k + 1];
            }

            Equations.CalcSpeed(speed, ref statInfo, ref gcd25, ref gcd28, lvlModifier, altGcd, null, out var baseModGcd, out var altBaseModGcd);

            Assert.AreEqual(250, baseModGcd, "Base GCD is off for {0}", speed);
            Assert.AreEqual(280, altBaseModGcd, "Alt Base GCD is off for {0}", speed);

            Assert.AreEqual(lbp.GcdScalar, gcd25.DisplayValue, "GCD is off for {0}", speed);
            Assert.AreEqual(lbp.Speed, gcd25.PrevTier, "PrevTier is off for {0}", speed);
            Assert.AreEqual(nbp.Speed, gcd25.NextTier, "NextTier is off for {0}", speed);

            Assert.AreEqual(lbp28.GcdScalar, gcd28.DisplayValue, "GCD is off for {0}", speed);
            Assert.AreEqual(lbp28.Speed, gcd28.PrevTier, "PrevTier is off for {0}", speed);
            Assert.AreEqual(nbp28.Speed, gcd28.NextTier, "NextTier is off for {0}", speed);

            Equations.CalcSpeed(speed, ref statInfo, ref gcd25, ref gcd28, lvlModifier, altGcd, gcdMod, out baseModGcd, out altBaseModGcd);

            Assert.AreEqual(212, baseModGcd, "Base GCD is off for {0}", speed);
            Assert.AreEqual(238, altBaseModGcd, "Alt Base GCD is off for {0}", speed);

            Assert.AreEqual(lbpm.GcdScalar, gcd25.DisplayValue, "GCD is off for {0}", speed);
            Assert.AreEqual(lbpm.Speed, gcd25.PrevTier, "PrevTier is off for {0}", speed);
            Assert.AreEqual(nbpm.Speed, gcd25.NextTier, "NextTier is off for {0}", speed);

            Assert.AreEqual(lbpm28.GcdScalar, gcd28.DisplayValue, "GCD is off for {0}", speed);
            Assert.AreEqual(lbpm28.Speed, gcd28.PrevTier, "PrevTier is off for {0}", speed);
            Assert.AreEqual(nbpm28.Speed, gcd28.NextTier, "NextTier is off for {0}", speed);
        }
    }

    [Test]
    public void TestLevelModifiers() {
        Assert.AreEqual(195, LevelModifiers.AttackModifier(90));
        Assert.AreEqual(156, LevelModifiers.TankAttackModifier(90));
        Assert.AreEqual(24.3, LevelModifiers.HpModifier(90));
        Assert.AreEqual(34.6, LevelModifiers.TankHpModifier(90));
    }
    
    [Test]
    public unsafe void TestExpectedOutput() {
        var expectedValues = new List<(ushort Wd, int Mnd, int Det, int ExpectedDamage, int ExpectedHeal)> {
            (126, 2940, 1788, 3417, 2566),
            (126, 3028, 1788, 3527, 2646),
            (126, 3057, 1788, 3560, 2671),
            (119, 2669, 1743, 2940, 2213),
            (113, 2309, 1734, 2420, 1830)
        };
        
        var inventoryManager = new InventoryManager();
        InventoryManager.Addresses.Instance.Value = (nuint)(&inventoryManager);
        
        var uiState = new UIState();
        uiState.PlayerState.CurrentLevel = 90;
        var statInfo = new StatInfo();
        var levelModifier = LevelModifiers.LevelTable[90];
        
        foreach (var (wd, mnd, det, expectedDmg, expectedHeal) in expectedValues) {
            ((ushort*)((IntPtr)(&inventoryManager) + 9160))[17] = wd;
            uiState.PlayerState.Attributes[(int)Attributes.AttackMagicPotency] = mnd;
            var detVal = Equations.CalcDet(det, ref statInfo, levelModifier);

            var result = Equations.CalcExpectedOutput(&uiState, JobId.WHM, detVal, 1.4, 0.05, 0, 0, levelModifier, null, IlvlSyncType.Strict);
            
            Assert.AreEqual(expectedDmg, result.AvgDamage, "Damage is off for {0}|{1}|{2}", wd, mnd, det);
            Assert.AreEqual(expectedHeal, result.NormalHeal, "Heal is off for {0}|{1}|{2}", wd, mnd, det);
        }
    }
}
